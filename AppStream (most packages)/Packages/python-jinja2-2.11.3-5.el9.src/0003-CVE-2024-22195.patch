From d9835bd39a630ea74f719e1c76765ca2ec89f2f2 Mon Sep 17 00:00:00 2001
From: Calum Hutton <calum.hutton@snyk.io>
Date: Thu, 26 Oct 2023 12:08:53 +0100
Subject: [PATCH] xmlattr filter disallows keys with spaces

---
 src/jinja2/filters.py | 26 +++++++++++++++++++-------
 tests/test_filters.py |  6 ++++++
 2 files changed, 25 insertions(+), 7 deletions(-)

diff --git a/src/jinja2/filters.py b/src/jinja2/filters.py
index 74b108d..49f7d39 100644
--- a/src/jinja2/filters.py
+++ b/src/jinja2/filters.py
@@ -205,11 +205,15 @@ def do_lower(s):
     return soft_unicode(s).lower()
 
 
+_space_re = re.compile(r"\s", flags=re.ASCII)
+
+
 @evalcontextfilter
 def do_xmlattr(_eval_ctx, d, autospace=True):
     """Create an SGML/XML attribute string based on the items in a dict.
-    All values that are neither `none` nor `undefined` are automatically
-    escaped:
+
+    If any key contains a space, this fails with a ``ValueError``. Values that
+    are neither ``none`` nor ``undefined`` are automatically escaped.
 
     .. sourcecode:: html+jinja
 
@@ -229,11 +233,19 @@ def do_xmlattr(_eval_ctx, d, autospace=True):
     As you can see it automatically prepends a space in front of the item
     if the filter returned something unless the second parameter is false.
     """
-    rv = u" ".join(
-        u'%s="%s"' % (escape(key), escape(value))
-        for key, value in iteritems(d)
-        if value is not None and not isinstance(value, Undefined)
-    )
+    items = []
+
+    for key, value in d.items():
+        if value is None or isinstance(value, Undefined):
+            continue
+
+        if _space_re.search(key) is not None:
+            raise ValueError(f"Spaces are not allowed in attributes: '{key}'")
+
+        items.append(f'{escape(key)}="{escape(value)}"')
+
+    rv = " ".join(items)
+
     if autospace and rv:
         rv = u" " + rv
     if _eval_ctx.autoescape:
diff --git a/tests/test_filters.py b/tests/test_filters.py
index 388c346..6e697f3 100644
--- a/tests/test_filters.py
+++ b/tests/test_filters.py
@@ -440,6 +440,12 @@ class TestFilter(object):
         assert 'bar="23"' in out
         assert 'blub:blub="&lt;?&gt;"' in out
 
+    def test_xmlattr_key_with_spaces(self, env):
+        with pytest.raises(ValueError, match="Spaces are not allowed"):
+            env.from_string(
+                "{{ {'src=1 onerror=alert(1)': 'my_class'}|xmlattr }}"
+            ).render()
+
     def test_sort1(self, env):
         tmpl = env.from_string("{{ [2, 3, 1]|sort }}|{{ [2, 3, 1]|sort(true) }}")
         assert tmpl.render() == "[1, 2, 3]|[3, 2, 1]"
-- 
2.43.0

