From 1ba9183936e11839811cf27472677d44ea4eb1a2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=81lex=20S=C3=A1ez?= <asm@redhat.com>
Date: Wed, 24 Jan 2024 13:10:29 +0100
Subject: [PATCH] Modify tests

Some tests are not working properly with the build system so we need to
adapt them, like changing the ports they used.
---
 _fixtures/notify-v2.go       | 2 +-
 pkg/proc/proc_test.go        | 6 ++++++
 pkg/terminal/command_test.go | 2 +-
 3 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/_fixtures/notify-v2.go b/_fixtures/notify-v2.go
index eb80526b..0f562c27 100644
--- a/_fixtures/notify-v2.go
+++ b/_fixtures/notify-v2.go
@@ -19,5 +19,5 @@ func main() {
 		}()
 	})
 
-	log.Fatalln(http.ListenAndServe("127.0.0.1:8888", nil))
+	log.Fatalln(http.ListenAndServe("127.0.0.1:8889", nil))
 }
diff --git a/pkg/proc/proc_test.go b/pkg/proc/proc_test.go
index 714a4d1d..ae9f0bd9 100644
--- a/pkg/proc/proc_test.go
+++ b/pkg/proc/proc_test.go
@@ -2512,6 +2512,9 @@ func TestStepConcurrentDirect(t *testing.T) {
 }
 
 func TestStepConcurrentPtr(t *testing.T) {
+	if runtime.GOARCH == "ppc64le" {
+		t.Skipf("Skipping due to CI issues")
+	}
 	protest.AllowRecording(t)
 	withTestProcess("teststepconcurrent", t, func(p *proc.Target, grp *proc.TargetGroup, fixture protest.Fixture) {
 		setFileBreakpoint(p, t, fixture.Source, 24)
@@ -6080,6 +6083,9 @@ func TestEscapeCheckUnreadable(t *testing.T) {
 }
 
 func TestStepShadowConcurrentBreakpoint(t *testing.T) {
+	if runtime.GOARCH == "ppc64le" {
+		t.Skipf("Skipping due to CI issues")
+	}
 	// Checks that a StepBreakpoint can not shadow a concurrently hit user breakpoint
 	withTestProcess("stepshadow", t, func(p *proc.Target, grp *proc.TargetGroup, fixture protest.Fixture) {
 		break2 := setFunctionBreakpoint(p, t, "main.stacktraceme2")
diff --git a/pkg/terminal/command_test.go b/pkg/terminal/command_test.go
index 57b62105..f6e3a3d9 100644
--- a/pkg/terminal/command_test.go
+++ b/pkg/terminal/command_test.go
@@ -695,7 +695,7 @@ func TestIssue827(t *testing.T) {
 	withTestTerminal("notify-v2", t, func(term *FakeTerminal) {
 		go func() {
 			time.Sleep(1 * time.Second)
-			resp, err := http.Get("http://127.0.0.1:8888/test")
+			resp, err := http.Get("http://127.0.0.1:8889/test")
 			if err == nil {
 				resp.Body.Close()
 			}
-- 
2.43.0

